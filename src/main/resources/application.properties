# ========================
# SPRING APPLICATION
# ========================
spring.application.name=OldBaker

# ========================
# ORACLE DATABASE CONFIGURATION
# ========================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}

# ========================
# JPA CONFIGURATION
# ========================
#Cambiar si se necesita crear o actualizar las tablas desde las entidades.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.properties.hibernate.query.use_sql_comments=true
spring.jpa.properties.hibernate.query.use_temporary_tables_for_update=false

# ========================
# JWT CONFIGURATION
# ========================
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# ========================
# GOOGLE OAUTH2 CONFIGURATION
# ========================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}

spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTH_URI}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI}
spring.security.oauth2.client.provider.google.user-name-attribute=${GOOGLE_USER_NAME_ATTRIBUTE}

# ========================
# LOGGING CONFIGURATION
# ========================
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.tool.hbm2ddl=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# ========================
# HTTPS / SSL
# ========================
server.port=${SERVER_PORT}
server.ssl.key-store=${SERVER_SSL_KEY_STORE}
server.ssl.key-store-password=${SERVER_SSL_KEY_STORE_PASSWORD}
server.ssl.key-alias=${SERVER_SSL_KEY_ALIAS}

# ========================
# MAIL CONFIGURATION
# ========================
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE}


# Thymeleaf configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML